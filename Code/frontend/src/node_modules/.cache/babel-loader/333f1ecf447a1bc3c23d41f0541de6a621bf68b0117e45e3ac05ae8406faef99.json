{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3140267a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"update-section\"\n};\nconst _hoisted_2 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Update Section\", -1));\nconst _hoisted_4 = {\n  class: \"form-group row\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"section_name\",\n  class: \"col-sm-2 form-label\"\n}, \"Section Name\", -1));\nconst _hoisted_6 = {\n  class: \"col-sm-10\"\n};\nconst _hoisted_7 = {\n  class: \"form-group row\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"section_content\",\n  class: \"col-sm-2 form-label\"\n}, \"Section Description\", -1));\nconst _hoisted_9 = {\n  class: \"col-sm-10\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"form-group row\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-sm-10\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"btn btn-primary\"\n}, \"Update Section\")])], -1));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_NavBar), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.updateSection && $options.updateSection(...args), [\"prevent\"])),\n    class: \"mt-3\"\n  }, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.section_name = $event),\n    type: \"text\",\n    class: \"form-control\",\n    id: \"section_name\",\n    placeholder: \"Enter section name\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.section_name]])])]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.section_content = $event),\n    type: \"text\",\n    class: \"form-control\",\n    id: \"section_content\",\n    placeholder: \"Enter section description\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.section_content]])])]), _hoisted_10], 32)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_createElementBlock","_hoisted_1","_createVNode","_component_NavBar","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","updateSection","_hoisted_4","_hoisted_5","_hoisted_6","$event","$data","section_name","id","placeholder","required","_hoisted_7","_hoisted_8","_hoisted_9","section_content","_hoisted_10"],"sources":["C:\\Users\\rchan\\Desktop\\uplagarize\\Code\\frontend\\src\\views\\SectionUpdate.vue"],"sourcesContent":["<template>\r\n  <div class=\"update-section\">\r\n    <NavBar />\r\n    <div class=\"container mt-5\">\r\n      <h2>Update Section</h2>\r\n      <form @submit.prevent=\"updateSection\" class=\"mt-3\">\r\n        <div class=\"form-group row\">\r\n          <label for=\"section_name\" class=\"col-sm-2 form-label\">Section Name</label>\r\n          <div class=\"col-sm-10\">\r\n            <input v-model=\"section_name\" type=\"text\" class=\"form-control\" id=\"section_name\" placeholder=\"Enter section name\" required>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label for=\"section_content\" class=\"col-sm-2 form-label\">Section Description</label>\r\n          <div class=\"col-sm-10\">\r\n            <input v-model=\"section_content\" type=\"text\" class=\"form-control\" id=\"section_content\" placeholder=\"Enter section description\" required>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-10\">\r\n            <button type=\"submit\" class=\"btn btn-primary\">Update Section</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      section_name: \"\",\r\n      section_content: \"\",\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchSectionDetails();\r\n  },\r\n  methods: {\r\n    async fetchSectionDetails() {\r\n      const sectionId = this.$route.params.id;\r\n      const token = localStorage.getItem(\"access_token\");\r\n\r\n      if (!token) {\r\n        console.error(\"Access token is null\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await this.getSection(sectionId, token);\r\n        const data = await response.json();\r\n        this.section_name = data.section.name;\r\n        this.section_content = data.section.content;\r\n      } catch (error) {\r\n        console.error(`Error fetching section details for ID ${sectionId}:`, error);\r\n      }\r\n    },\r\n    async getSection(sectionId, token) {\r\n      const response = await fetch(`http://127.0.0.1:5000/section/${sectionId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          \"Authorization\": `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      return response;\r\n    },\r\n    async updateSection() {\r\n      const sectionId = this.$route.params.id;\r\n      const token = localStorage.getItem('access_token');\r\n\r\n      if (!token) {\r\n        console.error(\"Access token is null\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        await this.performUpdateSection(sectionId, token);\r\n        console.log(`Section with ID ${sectionId} updated successfully`);\r\n        this.$router.push('/view-sections');\r\n      } catch (error) {\r\n        console.error(`Error updating section with ID ${sectionId}:`, error);\r\n      }\r\n    },\r\n    async performUpdateSection(sectionId, token) {\r\n      const response = await fetch(`http://127.0.0.1:5000/section/${sectionId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          name: this.section_name,\r\n          content: this.section_content,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      return response;\r\n    },\r\n  },\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.update-section {\r\n  font-family: 'Roboto', sans-serif;\r\n  background-color: #f7fafc;\r\n  min-height: 100vh;\r\n  padding: 2rem;\r\n}\r\n\r\nh2 {\r\n  font-size: 1.75rem;\r\n  color: #2d3748;\r\n  font-weight: 700;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.form-label {\r\n  font-weight: 500;\r\n  color: #2d3748;\r\n}\r\n\r\n.form-control {\r\n  border-radius: 0.375rem;\r\n  border: 1px solid #ced4da;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #3182ce;\r\n  border-color: #3182ce;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #2b6cb0;\r\n  border-color: #2b6cb0;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;;EAEpBA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAAuB,YAAnB,gBAAc;;EAEXD,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAA0E;EAAnEC,GAAG,EAAC,cAAc;EAACF,KAAK,EAAC;GAAsB,cAAY;;EAC7DA,KAAK,EAAC;AAAW;;EAInBA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAAoF;EAA7EC,GAAG,EAAC,iBAAiB;EAACF,KAAK,EAAC;GAAsB,qBAAmB;;EACvEA,KAAK,EAAC;AAAW;iEAIxBC,mBAAA,CAIM;EAJDD,KAAK,EAAC;AAAgB,I,aACzBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAW,I,aACpBC,mBAAA,CAAqE;EAA7DE,IAAI,EAAC,QAAQ;EAACH,KAAK,EAAC;GAAkB,gBAAc,E;;;uBAnBtEI,mBAAA,CAwBM,OAxBNC,UAwBM,GAvBJC,YAAA,CAAUC,iBAAA,GACVN,mBAAA,CAqBM,OArBNO,UAqBM,GApBJC,UAAuB,EACvBR,mBAAA,CAkBO;IAlBAS,QAAM,EAAAC,MAAA,QAAAA,MAAA,MALnBC,cAAA,KAAAC,IAAA,KAK6BC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;IAAEb,KAAK,EAAC;MAC1CC,mBAAA,CAKM,OALNe,UAKM,GAJJC,UAA0E,EAC1EhB,mBAAA,CAEM,OAFNiB,UAEM,G,gBADJjB,mBAAA,CAA2H;IATvI,uBAAAU,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAS4BC,KAAA,CAAAC,YAAY,GAAAF,MAAA;IAAEhB,IAAI,EAAC,MAAM;IAACH,KAAK,EAAC,cAAc;IAACsB,EAAE,EAAC,cAAc;IAACC,WAAW,EAAC,oBAAoB;IAACC,QAAQ,EAAR;gCAAlGJ,KAAA,CAAAC,YAAY,E,OAGhCpB,mBAAA,CAKM,OALNwB,UAKM,GAJJC,UAAoF,EACpFzB,mBAAA,CAEM,OAFN0B,UAEM,G,gBADJ1B,mBAAA,CAAwI;IAfpJ,uBAAAU,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAe4BC,KAAA,CAAAQ,eAAe,GAAAT,MAAA;IAAEhB,IAAI,EAAC,MAAM;IAACH,KAAK,EAAC,cAAc;IAACsB,EAAE,EAAC,iBAAiB;IAACC,WAAW,EAAC,2BAA2B;IAACC,QAAQ,EAAR;gCAA/GJ,KAAA,CAAAQ,eAAe,E,OAGnCC,WAIM,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}