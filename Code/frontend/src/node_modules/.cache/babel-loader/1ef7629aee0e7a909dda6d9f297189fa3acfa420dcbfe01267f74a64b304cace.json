{"ast":null,"code":"export default {\n  data() {\n    return {\n      user: null,\n      islibrarian: false,\n      isuser: false,\n      loggedin: false,\n      username: null,\n      userid: null\n    };\n  },\n  async created() {\n    await this.checktoken();\n  },\n  methods: {\n    async checktoken() {\n      const access_token = localStorage.getItem(\"access_token\");\n      if (!access_token) {\n        this.loggedin = false;\n        this.islibrarian = false;\n        this.isuser = false;\n        return;\n      }\n      try {\n        this.user = await this.getuserinfo(access_token);\n        this.loggedin = true;\n        this.username = this.user.name;\n        this.userid = this.user.id;\n        if (this.user.role === 'librarian') {\n          this.islibrarian = true;\n        } else {\n          this.isuser = true;\n        }\n      } catch (error) {\n        console.error(\"Error fetching user info:\", error);\n        this.loggedin = false;\n      }\n    },\n    async getuserinfo(access_token) {\n      const response = await fetch(\"http://localhost:5000/userinfo\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${access_token}`\n        }\n      });\n      if (response.status === 401) {\n        this.loggedin = false;\n        return null;\n      }\n      return await response.json();\n    },\n    logout() {\n      fetch(\"http://localhost:5000/logout\", {\n        method: \"POST\",\n        credentials: \"include\"\n      }).then(() => {\n        localStorage.removeItem(\"access_token\");\n        this.user = null;\n        this.loggedin = false;\n        this.$router.push(\"/login\");\n      }).catch(error => {\n        console.error(\"Logout error:\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","user","islibrarian","isuser","loggedin","username","userid","created","checktoken","methods","access_token","localStorage","getItem","getuserinfo","name","id","role","error","console","response","fetch","method","headers","Authorization","status","json","logout","credentials","then","removeItem","$router","push","catch"],"sources":["C:/Users/rchan/Desktop/uplagarize/Code/frontend/src/mixins/userMixin.js"],"sourcesContent":["export default {\r\n  data() {\r\n    return {\r\n      user: null,\r\n      islibrarian: false,\r\n      isuser: false,\r\n      loggedin: false,\r\n      username: null,\r\n      userid: null\r\n    };\r\n  },\r\n  async created() {\r\n    await this.checktoken();\r\n  },\r\n  methods: {\r\n    async checktoken() {\r\n      const access_token = localStorage.getItem(\"access_token\");\r\n      if (!access_token) {\r\n        this.loggedin = false;\r\n        this.islibrarian = false;\r\n        this.isuser = false;\r\n        return;\r\n      }\r\n      try {\r\n        this.user = await this.getuserinfo(access_token);\r\n        this.loggedin = true;\r\n        this.username = this.user.name\r\n        this.userid = this.user.id\r\n        if (this.user.role === 'librarian') {\r\n          this.islibrarian = true;\r\n        }\r\n        else {\r\n          this.isuser = true\r\n          \r\n        }\r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching user info:\", error);\r\n        this.loggedin = false;\r\n      }\r\n    },\r\n    async getuserinfo(access_token) {\r\n      const response = await fetch(\"http://localhost:5000/userinfo\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${access_token}`,\r\n        },\r\n      });\r\n      if (response.status === 401) {\r\n        this.loggedin = false;\r\n        return null;\r\n      }\r\n      \r\n      return await response.json();\r\n    },\r\n    logout() {\r\n      fetch(\"http://localhost:5000/logout\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n      })\r\n        .then(() => {\r\n          localStorage.removeItem(\"access_token\");\r\n          this.user = null;\r\n          this.loggedin = false;\r\n          this.$router.push(\"/login\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Logout error:\", error);\r\n        });\r\n    },\r\n  },\r\n};\r\n"],"mappings":"AAAA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,WAAW,EAAE,KAAK;MAClBC,MAAM,EAAE,KAAK;MACbC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,UAAU,CAAC,CAAC;EACzB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,UAAUA,CAAA,EAAG;MACjB,MAAME,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACzD,IAAI,CAACF,YAAY,EAAE;QACjB,IAAI,CAACN,QAAQ,GAAG,KAAK;QACrB,IAAI,CAACF,WAAW,GAAG,KAAK;QACxB,IAAI,CAACC,MAAM,GAAG,KAAK;QACnB;MACF;MACA,IAAI;QACF,IAAI,CAACF,IAAI,GAAG,MAAM,IAAI,CAACY,WAAW,CAACH,YAAY,CAAC;QAChD,IAAI,CAACN,QAAQ,GAAG,IAAI;QACpB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACJ,IAAI,CAACa,IAAI;QAC9B,IAAI,CAACR,MAAM,GAAG,IAAI,CAACL,IAAI,CAACc,EAAE;QAC1B,IAAI,IAAI,CAACd,IAAI,CAACe,IAAI,KAAK,WAAW,EAAE;UAClC,IAAI,CAACd,WAAW,GAAG,IAAI;QACzB,CAAC,MACI;UACH,IAAI,CAACC,MAAM,GAAG,IAAI;QAEpB;MAEF,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD,IAAI,CAACb,QAAQ,GAAG,KAAK;MACvB;IACF,CAAC;IACD,MAAMS,WAAWA,CAACH,YAAY,EAAE;MAC9B,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUb,YAAY;QACvC;MACF,CAAC,CAAC;MACF,IAAIS,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;QAC3B,IAAI,CAACpB,QAAQ,GAAG,KAAK;QACrB,OAAO,IAAI;MACb;MAEA,OAAO,MAAMe,QAAQ,CAACM,IAAI,CAAC,CAAC;IAC9B,CAAC;IACDC,MAAMA,CAAA,EAAG;MACPN,KAAK,CAAC,8BAA8B,EAAE;QACpCC,MAAM,EAAE,MAAM;QACdM,WAAW,EAAE;MACf,CAAC,CAAC,CACCC,IAAI,CAAC,MAAM;QACVjB,YAAY,CAACkB,UAAU,CAAC,cAAc,CAAC;QACvC,IAAI,CAAC5B,IAAI,GAAG,IAAI;QAChB,IAAI,CAACG,QAAQ,GAAG,KAAK;QACrB,IAAI,CAAC0B,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC7B,CAAC,CAAC,CACDC,KAAK,CAAEf,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACvC,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}