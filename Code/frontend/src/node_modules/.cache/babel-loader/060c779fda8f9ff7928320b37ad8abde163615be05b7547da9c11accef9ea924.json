{"ast":null,"code":"import NavBar from \"@/components/NavBar.vue\";\nexport default {\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      section_name: '',\n      section_desc: ''\n    };\n  },\n  methods: {\n    async createSection() {\n      try {\n        const response = await this.sendSectionData({\n          name: this.section_name,\n          content: this.section_desc\n        });\n        const data = await response.json();\n        if (response.ok) {\n          alert(data.message);\n          this.$router.push('/view-sections');\n        } else {\n          alert('Error: ' + data.error);\n        }\n      } catch (error) {\n        console.error('Create section error:', error);\n        alert('An error occurred while creating the section.');\n      }\n    },\n    async sendSectionData(sectionData) {\n      const response = await fetch('http://127.0.0.1:5000/section', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('access_token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(sectionData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error: ${response.status}`);\n      }\n      return response;\n    }\n  }\n};","map":{"version":3,"names":["NavBar","components","data","section_name","section_desc","methods","createSection","response","sendSectionData","name","content","json","ok","alert","message","$router","push","error","console","sectionData","fetch","method","headers","localStorage","getItem","body","JSON","stringify","Error","status"],"sources":["C:\\Users\\rchan\\Desktop\\uplagarize\\Code\\frontend\\src\\views\\SectionCreate.vue"],"sourcesContent":["<template>\r\n  <div class=\"create-section\">\r\n    <NavBar />\r\n    <div class=\"container mt-5\">\r\n      <h2>Create Section</h2>\r\n      <form @submit.prevent=\"createSection\" class=\"mt-3\">\r\n        <div class=\"form-group row\">\r\n          <label for=\"section_name\" class=\"col-sm-2 form-label\">Section Name</label>\r\n          <div class=\"col-sm-10\">\r\n            <input v-model=\"section_name\" type=\"text\" class=\"form-control\" id=\"section_name\" placeholder=\"Enter section name\" required>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label for=\"section_desc\" class=\"col-sm-2 form-label\">Section Description</label>\r\n          <div class=\"col-sm-10\">\r\n            <input v-model=\"section_desc\" type=\"text\" class=\"form-control\" id=\"section_desc\" placeholder=\"Enter section description\" required>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-10\">\r\n            <button type=\"submit\" class=\"btn btn-primary\">Create Section</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NavBar from \"@/components/NavBar.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    NavBar,\r\n  },\r\n  data() {\r\n    return {\r\n      section_name: '',\r\n      section_desc: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async createSection() {\r\n      try {\r\n        const response = await this.sendSectionData({\r\n          name: this.section_name,\r\n          content: this.section_desc,\r\n        });\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          alert(data.message);\r\n          this.$router.push('/view-sections');\r\n        } else {\r\n          alert('Error: ' + data.error);\r\n        }\r\n      } catch (error) {\r\n        console.error('Create section error:', error);\r\n        alert('An error occurred while creating the section.');\r\n      }\r\n    },\r\n    async sendSectionData(sectionData) {\r\n      const response = await fetch('http://127.0.0.1:5000/section', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': 'Bearer ' + localStorage.getItem('access_token'),\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(sectionData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error: ${response.status}`);\r\n      }\r\n\r\n      return response;\r\n    },\r\n  },\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.create-section {\r\n  font-family: 'Roboto', sans-serif;\r\n  background-color: #f7fafc;\r\n  min-height: 100vh;\r\n  padding: 2rem;\r\n}\r\n\r\nh2 {\r\n  font-size: 1.75rem;\r\n  color: #2d3748;\r\n  font-weight: 700;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.form-label {\r\n  font-weight: 500;\r\n  color: #2d3748;\r\n}\r\n\r\n.form-control {\r\n  border-radius: 0.375rem;\r\n  border: 1px solid #ced4da;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #3182ce;\r\n  border-color: #3182ce;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #2b6cb0;\r\n  border-color: #2b6cb0;\r\n}\r\n</style>\r\n"],"mappings":"AA6BA,OAAOA,MAAK,MAAO,yBAAyB;AAE5C,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAM,IAAI,CAACC,eAAe,CAAC;UAC1CC,IAAI,EAAE,IAAI,CAACN,YAAY;UACvBO,OAAO,EAAE,IAAI,CAACN;QAChB,CAAC,CAAC;QACF,MAAMF,IAAG,GAAI,MAAMK,QAAQ,CAACI,IAAI,CAAC,CAAC;QAElC,IAAIJ,QAAQ,CAACK,EAAE,EAAE;UACfC,KAAK,CAACX,IAAI,CAACY,OAAO,CAAC;UACnB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,gBAAgB,CAAC;QACrC,OAAO;UACLH,KAAK,CAAC,SAAQ,GAAIX,IAAI,CAACe,KAAK,CAAC;QAC/B;MACF,EAAE,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CJ,KAAK,CAAC,+CAA+C,CAAC;MACxD;IACF,CAAC;IACD,MAAML,eAAeA,CAACW,WAAW,EAAE;MACjC,MAAMZ,QAAO,GAAI,MAAMa,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,eAAe,EAAE,SAAQ,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;UACjE,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAACZ,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIgB,KAAK,CAAC,eAAerB,QAAQ,CAACsB,MAAM,EAAE,CAAC;MACnD;MAEA,OAAOtB,QAAQ;IACjB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}