{"ast":null,"code":"import userMixins from '../mixins/userMixin';\nimport NavBar from '../components/NavBar.vue';\nexport default {\n  mixins: [userMixins],\n  data() {\n    return {\n      bookrequest: []\n    };\n  },\n  mounted() {\n    this.fetchBookRequests();\n  },\n  methods: {\n    async fetchBookRequests() {\n      try {\n        const data = await this.fetchData('http://127.0.0.1:5000/bookrequest/status');\n        this.bookrequest = data.bookrequest;\n      } catch (error) {\n        console.error('Error fetching book requests:', error);\n      }\n    },\n    async revokeBook(req_id) {\n      try {\n        await this.updateBookRequestStatus(req_id, 'return');\n        this.$router.push('/book-request-status');\n      } catch (error) {\n        console.error('Book request could not be approved:', error);\n      }\n    },\n    async fetchData(url) {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error: ${response.status}`);\n      }\n      return response.json();\n    },\n    async updateBookRequestStatus(req_id, status) {\n      const response = await fetch(`http://127.0.0.1:5000/bookrequest/status/${req_id}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('access_token'),\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          status\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n    }\n  }\n};","map":{"version":3,"names":["userMixins","NavBar","mixins","data","bookrequest","mounted","fetchBookRequests","methods","fetchData","error","console","revokeBook","req_id","updateBookRequestStatus","$router","push","url","response","fetch","method","headers","localStorage","getItem","ok","Error","status","json","body","JSON","stringify"],"sources":["C:\\Users\\rchan\\Desktop\\uplagarize\\Code\\frontend\\src\\views\\RevokeBook.vue"],"sourcesContent":["<template>\r\n    <div class=\"user-request-queue\">\r\n      <NavBar />\r\n      <div class=\"container mt-5\">\r\n        <h2>User Request Queue</h2>\r\n        <div class=\"requests mt-4\">\r\n          <table class=\"table table-bordered table-hover\">\r\n            <thead class=\"table-dark\">\r\n              <tr>\r\n                <th>Book ID</th>\r\n                <th>User ID</th>\r\n                <th>Status</th>\r\n                <th>Issue</th>\r\n                <th>Due</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"bookreq in bookrequest\" :key=\"bookreq.id\">\r\n                <td>{{ bookreq.book_id }}</td>\r\n                <td>{{ bookreq.user_id }}</td>\r\n                <td>{{ bookreq.status }}</td>\r\n                <td>{{ bookreq.issue }}</td>\r\n                <td>{{ bookreq.due }}</td>\r\n                <td>\r\n                  <div class=\"btn-group\" role=\"group\">\r\n                    <button v-if=\"this.islibrarian && (bookreq.status === 'approve')\" class=\"btn btn-outline-primary\" @click=\"revokeBook(bookreq.id)\">Revoke</button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import userMixins from '../mixins/userMixin';\r\n  import NavBar from '../components/NavBar.vue';\r\n  \r\n  export default {\r\n    mixins: [userMixins],\r\n    data() {\r\n      return {\r\n        bookrequest: [],\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchBookRequests();\r\n    },\r\n    methods: {\r\n      async fetchBookRequests() {\r\n        try {\r\n          const data = await this.fetchData('http://127.0.0.1:5000/bookrequest/status');\r\n          this.bookrequest = data.bookrequest;\r\n        } catch (error) {\r\n          console.error('Error fetching book requests:', error);\r\n        }\r\n      },\r\n      async revokeBook(req_id) {\r\n        try {\r\n          await this.updateBookRequestStatus(req_id, 'return');\r\n          this.$router.push('/book-request-status');\r\n        } catch (error) {\r\n          console.error('Book request could not be approved:', error);\r\n        }\r\n      },\r\n      async fetchData(url) {\r\n        const response = await fetch(url, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer ' + localStorage.getItem('access_token'),\r\n          }\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      },\r\n      async updateBookRequestStatus(req_id, status) {\r\n        const response = await fetch(`http://127.0.0.1:5000/bookrequest/status/${req_id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Authorization': 'Bearer ' + localStorage.getItem('access_token'),\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ status }),\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  \r\n  </script>\r\n  \r\n  <style scoped>\r\n  .user-request-queue {\r\n    font-family: 'Roboto', sans-serif;\r\n    background-color: #f7fafc;\r\n    min-height: 100vh;\r\n    padding: 2rem;\r\n  }\r\n  \r\n  h2 {\r\n    font-size: 1.75rem;\r\n    color: #2d3748;\r\n    font-weight: 700;\r\n  }\r\n  \r\n  .table {\r\n    background-color: #ffffff;\r\n    border-radius: 0.375rem;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .table-dark {\r\n    background-color: #343a40;\r\n    color: #ffffff;\r\n  }\r\n  \r\n  .table-bordered {\r\n    border: 1px solid #dee2e6;\r\n  }\r\n  \r\n  .table-hover tbody tr:hover {\r\n    background-color: #f1f1f1;\r\n  }\r\n  \r\n  .btn-outline-primary {\r\n    color: #3182ce;\r\n    border-color: #3182ce;\r\n  }\r\n  \r\n  .btn-outline-primary:hover {\r\n    background-color: #3182ce;\r\n    color: #ffffff;\r\n  }\r\n  \r\n  .btn-outline-danger {\r\n    color: #e53e3e;\r\n    border-color: #e53e3e;\r\n  }\r\n  \r\n  .btn-outline-danger:hover {\r\n    background-color: #e53e3e;\r\n    color: #ffffff;\r\n  }\r\n  \r\n  .btn-group {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAsCE,OAAOA,UAAS,MAAO,qBAAqB;AAC5C,OAAOC,MAAK,MAAO,0BAA0B;AAE7C,eAAe;EACbC,MAAM,EAAE,CAACF,UAAU,CAAC;EACpBG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAMH,IAAG,GAAI,MAAM,IAAI,CAACK,SAAS,CAAC,0CAA0C,CAAC;QAC7E,IAAI,CAACJ,WAAU,GAAID,IAAI,CAACC,WAAW;MACrC,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IACD,MAAME,UAAUA,CAACC,MAAM,EAAE;MACvB,IAAI;QACF,MAAM,IAAI,CAACC,uBAAuB,CAACD,MAAM,EAAE,QAAQ,CAAC;QACpD,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC,sBAAsB,CAAC;MAC3C,EAAE,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF,CAAC;IACD,MAAMD,SAASA,CAACQ,GAAG,EAAE;MACnB,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAACF,GAAG,EAAE;QAChCG,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,SAAQ,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc;QAClE;MACF,CAAC,CAAC;MACF,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,eAAeP,QAAQ,CAACQ,MAAM,EAAE,CAAC;MACnD;MACA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACxB,CAAC;IACD,MAAMb,uBAAuBA,CAACD,MAAM,EAAEa,MAAM,EAAE;MAC5C,MAAMR,QAAO,GAAI,MAAMC,KAAK,CAAC,4CAA4CN,MAAM,EAAE,EAAE;QACjFO,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,eAAe,EAAE,SAAQ,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;UACjE,cAAc,EAAE;QAClB,CAAC;QACDK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEJ;QAAO,CAAC;MACjC,CAAC,CAAC;MACF,IAAI,CAACR,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBP,QAAQ,CAACQ,MAAM,EAAE,CAAC;MAC3D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}